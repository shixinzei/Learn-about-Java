1、抽象类与抽象方法的声明格式
【修饰符】 abstract  class 抽象类名{
}

【修饰符】 abstract  class 抽象类名  【extends 父类】 【implements 父接口们】{
}

抽象方法的声明格式：
【权限修饰符】 abstract 返回值类型  方法名(【形参列表】);


2、抽象类的特点
（1）抽象类不能创建对象
（2）抽象类用来被继承的，子类必须重写（实现）抽象类所有的抽象方法，否则子类也得是抽象类
（3）如果一个类包含抽象方法，这个类必须是抽象类，但是一个抽象类可以没有抽象方法
（4）抽象类的变量可以与子类的对象构成多态引用
（5）抽象类也可以有属性、构造器、代码块、非抽象的方法等


3、接口的声明格式、JDK1.8之前接口的成员
接口的声明格式：
【修饰符】 interface 接口名{
}
【修饰符】 interface 接口名 【extends 父接口们】{
}

JDK1.8之前接口的成员：
（1）全局的静态的常量：public static final
（2）公共的抽象的方法：public abstract

4、接口的特点
（1）接口不能创建对象
（2）接口是用来被实现的，实现类必须实现接口的所有的抽象方法，否则实现类也得是抽象类
（3）接口的变量可以与实现类的对象构成多态引用
（4）接口没有构造器等，只有少量的部分成员。
（5）接口可以继承多个接口
（6）一个类可以实现多个接口
（7）一个类在继承父类的同时实现多个接口，那么继承在前，实现在后。


5、请解释final、native修饰符
final：最终的
native：原生的

final可以修饰类、方法、变量
final修饰类表示不能被继承
final修饰方法表示可以被继承但是不能被重写
final修饰变量表示是常量，值不能被修改

native：修饰方法，表示它的方法体由C语言等实现。







